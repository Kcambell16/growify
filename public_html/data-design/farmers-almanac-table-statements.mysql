-- drop table if exists statements
DROP TABLE IF EXISTS plant;
DROP TABLE IF EXISTS profile;
DROP TABLE IF EXISTS zipcode;
DROP TABLE IF EXISTS companionplant;
DROP TABLE IF EXISTS combativeplant;
DROP TABLE IF EXISTS garden;
DROP TABLE IF EXISTS plantarea;

CREATE TABLE plant(

	classifications VARCHAR(6) NOT NULL ,
	plantWaterRequirement VARCHAR(3) NOT NULL,
	plantId SMALLINT UNSIGNED PRIMARY KEY NOT NULL AUTO_INCREMENT,
	plantDescription VARCHAR(512),
	plantSpread FLOAT UNSIGNED NOT NULL,
	plantHeight FLOAT UNSIGNED NOT NULL,
	-- maybe plantGrowthSpeed(1) NOT NULL
	daysToHarvest SMALLINT UNSIGNED NOT NULL,
	plantVariety VARCHAR(9) NOT NULL,
	plantName VARCHAR(26) UNIQUE NOT NULL,
	plantMaxTemp TINYINT UNSIGNED NOT NULL,
	plantMinTemp TINYINT SIGNED NOT NULL
);

CREATE TABLE profile(
	profileId SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	profileZipCode VARCHAR(5) NOT NULL,
	profileHash VARCHAR(128) NOT NULL, -- char(512) and UNIQUE????
	profileActivation BIT(1) NOT NULL, -- tinyint(1) or varchar(1) maybe??
	profileSalt VARCHAR(16) NOT NULL, -- larger? smaller? UNIQUE?
	profileUserName VARCHAR(16) UNIQUE NOT NULL,
	profileEmail VARCHAR(160) NOT NULL -- we can make it smaller and UNIQUE according to our decision
);

CREATE TABLE companionplant(
	companionplant1 SMALLINT UNSIGNED NOT NULL,
	companionplant2 SMALLINT UNSIGNED NOT NULL,
	-- index and create foreign keys
	INDEX(companionplant1),
	INDEX(companionplant2),
	FOREIGN KEY(companionplant1) REFERENCES plant(plantId),
	FOREIGN KEY(companionplant2) REFERENCES plant(plantId)
);

CREATE TABLE combativeplant(
	combativeplant1 SMALLINT UNSIGNED NOT NULL,
	combativeplant2 SMALLINT UNSIGNED NOT NULL,
	-- index foreign keys
	INDEX(combativeplant1),
	INDEX(combativeplant2),
	FOREIGN KEY(combativeplant1) REFERENCES plant(plantId),
	FOREIGN KEY(combativeplant2) REFERENCES plant(plantId)
);

CREATE TABLE gardern (
	gardenProfileId SMALLINT UNSIGNED,
	gardenPlantId SMALLINT UNSIGNED,
	gardenDatePlanted DATE,
	-- index and create foreign keys
	INDEX(gardenProfileId),
	INDEX(gardenPlantId),
	FOREIGN KEY(gardenProfileId) REFERENCES profile(profileId),
	FOREIGN KEY(gardenPlantId) REFERENCES plant(plantId)
);

CREATE TABLE plantarea(
	plantAreaId SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
	plantAreaStartDate DATE NOT NULL,
	plantAreaEndDate DATE NOT NULL,
	plantAreaPlantId SMALLINT UNSIGNED,
	plantAreaNumber TINYINT UNSIGNED,
	-- index and create foreign key
	INDEX(plantAreaPlantId),
	FOREIGN KEY(plantAreaPlantId) REFERENCES plant(plantId)
);

CREATE TABLE zipcode(
	zipCodeCode VARCHAR(5)PRIMARY KEY NOT NULL, -- made a varchar for easier validation but can change to unsigned int
	zipCodeZone TINYINT UNSIGNED NOT NULL,
	-- foreign key
	INDEX(zipCodeZone),
	FOREIGN KEY(zipCodeZone) REFERENCES plantarea(plantAreaNumber) -- this may be incorrect
)